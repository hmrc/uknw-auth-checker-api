headers {
  X-Correlation-Id: {{correlationId}}
}

auth {
  mode: oauth2
}

auth:oauth2 {
  grant_type: client_credentials
  access_token_url: {{oauthEndpoint}}
  client_id: {{clientId}}
  client_secret: {{clientSecret}}
  scope: 
}

script:pre-request {
  function uuidv4() {
      var d = new Date().getTime();
      var d2 = ((typeof performance !== 'undefined') && performance.now && (performance.now()*1000)) || 0;
      return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
          var r = Math.random() * 16;
          if(d > 0){
              r = (d + r)%16 | 0;
              d = Math.floor(d/16);
          } else {
              r = (d2 + r)%16 | 0;
              d2 = Math.floor(d2/16);
          }
          return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);
      });
  }
  
  bru.setEnvVar('correlationId', uuidv4());
}

script:post-response {
  const accessToken = bru.oauth2CredentialVariables["$oauth2.credentials.access_token"];
  if (accessToken) {
    bru.setVar('bearerToken', accessToken);
  }
  
  var correlationId = bru.getEnvVar('correlationId');
  if (correlationId) {
    bru.setEnvVar('correlationId', '');
  }
}
