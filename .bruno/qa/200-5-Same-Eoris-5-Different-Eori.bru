meta {
  name: 200-5-Same-Eoris-5-Different-Eori
  type: http
  seq: 4
}

post {
  url: {{apiEndpoint}}
  body: json
  auth: none
}

headers {
  Accept: application/vnd.hmrc.1.0+json
  Authorization: Bearer {{bearerToken}}
  X-Correlation-Id: {{correlationId}}
}

body:json {
  {
    "eoris": [
      "GB567891011123",
      "GB567891011123",
      "GB567891011123",
      "GB567891011123",
      "GB567891011123",
      "GB567891011124",
      "GB567891011125",
      "GB567891011126",
      "GB567891011127",
      "GB567891011128"
    ]
  }
}

assert {
  res.status: eq 200
}

tests {
  test("should have 6 EORI result", function() {
    const data = res.getBody();
    expect(res.getStatus()).to.equal(200);
    expect(data.eoris).to.be.an('array').that.has.lengthOf(6);
  });
  
  test("all EORI results should be  not authorised", function() {
    const data = res.getBody();
    data.eoris.map(json => expect(json.authorised).to.equal(false))
  });
    
  test("EORI returned is EORI sent in request", function(){
    expect(res.getBody().eoris[0].eori).to.equal("GB567891011124");
     expect(res.getBody().eoris[1].eori).to.equal("GB567891011123");
     expect(res.getBody().eoris[2].eori).to.equal("GB567891011126");
     expect(res.getBody().eoris[3].eori).to.equal("GB567891011125"); 
    expect(res.getBody().eoris[4].eori).to.equal("GB567891011128");
     expect(res.getBody().eoris[5].eori).to.equal("GB567891011127");
    
  });
  
  
  test("confirm Date Format", function() {
      const data = res.getBody();
  var timestampFormat= /^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d{2}Z$/.test(data.date);
  expect(timestampFormat).to.equal(true);
  var currentDate =  new Date().toJSON().slice(0, 15);
    expect(data.date).to.startWith(currentDate);
  });
}
